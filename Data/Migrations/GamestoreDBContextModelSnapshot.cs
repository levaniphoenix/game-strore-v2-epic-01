// <auto-generated />
using System;
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(GamestoreDBContext))]
    partial class GamestoreDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(5000)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Data.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentGenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("056341d2-838e-40f3-b3ea-6c64c50922d2"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("d4cfd6a1-5fe8-4c13-a22f-ed34169003fa"),
                            Name = "Sports Races"
                        },
                        new
                        {
                            Id = new Guid("81cbf5ee-fb01-412a-97cd-79bf741b5220"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("d4420df2-0630-4783-a203-2ff20a0bb388"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("e5a464d8-2bfc-41bc-8bba-e2efbc028231"),
                            Name = "Skill"
                        },
                        new
                        {
                            Id = new Guid("44d96f8e-7ae8-4f21-a836-8d2f018da989"),
                            Name = "RTS",
                            ParentGenreId = new Guid("056341d2-838e-40f3-b3ea-6c64c50922d2")
                        },
                        new
                        {
                            Id = new Guid("74db4762-d154-4d64-97d4-33ae1518fe83"),
                            Name = "TBS",
                            ParentGenreId = new Guid("056341d2-838e-40f3-b3ea-6c64c50922d2")
                        },
                        new
                        {
                            Id = new Guid("1b433802-d162-4a34-92f0-1cedc54f5788"),
                            Name = "RPG",
                            ParentGenreId = new Guid("056341d2-838e-40f3-b3ea-6c64c50922d2")
                        },
                        new
                        {
                            Id = new Guid("a448d817-2740-4a88-a36a-f7e3f9aa1ce1"),
                            Name = "Rally",
                            ParentGenreId = new Guid("d4cfd6a1-5fe8-4c13-a22f-ed34169003fa")
                        },
                        new
                        {
                            Id = new Guid("8669663c-4678-40e9-8f37-ddd4465a9cf9"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("d4cfd6a1-5fe8-4c13-a22f-ed34169003fa")
                        },
                        new
                        {
                            Id = new Guid("28e19936-9787-4ee9-8361-d1698515563a"),
                            Name = "Formula",
                            ParentGenreId = new Guid("d4cfd6a1-5fe8-4c13-a22f-ed34169003fa")
                        },
                        new
                        {
                            Id = new Guid("7379c31b-3085-43af-afee-d004f19df8b1"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("d4cfd6a1-5fe8-4c13-a22f-ed34169003fa")
                        },
                        new
                        {
                            Id = new Guid("3d3179bd-c77b-4d04-8e9b-5e38186ca7e7"),
                            Name = "FPS",
                            ParentGenreId = new Guid("81cbf5ee-fb01-412a-97cd-79bf741b5220")
                        },
                        new
                        {
                            Id = new Guid("57f45cec-c522-4c29-a802-ee93f33b2cff"),
                            Name = "TPS",
                            ParentGenreId = new Guid("81cbf5ee-fb01-412a-97cd-79bf741b5220")
                        },
                        new
                        {
                            Id = new Guid("a3877603-c23a-410b-8193-d6acc78b98d1"),
                            Name = "Puzzle",
                            ParentGenreId = new Guid("d4420df2-0630-4783-a203-2ff20a0bb388")
                        });
                });

            modelBuilder.Entity("Data.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6b26716-5b71-46f7-b2f8-a19c0dd573c6"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("fd1daa9a-6e5b-4d16-9b4e-9890f6247fdf"),
                            Type = "Browser"
                        },
                        new
                        {
                            Id = new Guid("64d99402-5850-42b1-ba04-659c2c56afa2"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("5d20764d-94a4-4c8b-b2e3-abef4cd84b2c"),
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.Property<Guid>("GamesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenresId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GamesId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.Property<Guid>("GamesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GamesId", "PlatformsId");

                    b.HasIndex("PlatformsId");

                    b.ToTable("GamePlatforms", (string)null);
                });

            modelBuilder.Entity("Data.Entities.Genre", b =>
                {
                    b.HasOne("Data.Entities.Genre", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentGenreId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.HasOne("Data.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.HasOne("Data.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Platform", null)
                        .WithMany()
                        .HasForeignKey("PlatformsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Genre", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
