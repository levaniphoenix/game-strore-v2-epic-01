// <auto-generated />
using System;
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(GamestoreDBContext))]
    partial class GamestoreDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Data.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("Data.Entities.GamePlatform", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatform");
                });

            modelBuilder.Entity("Data.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = new Guid("000a57c3-3871-483c-8bd1-7e04d59fba81"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("63499d64-2baf-4b14-a56b-f5065bab8173"),
                            Name = "Sports Races"
                        },
                        new
                        {
                            Id = new Guid("2dcac868-4939-4370-907a-1cfb78194a2c"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("876808bc-5a87-464f-8210-cf922a517505"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("9af09bc8-14ec-4278-9a63-550020252018"),
                            Name = "Skill"
                        },
                        new
                        {
                            Id = new Guid("13e1dbfe-c785-4e16-84aa-3f0a3b8a7cf0"),
                            Name = "RTS",
                            ParentGenreId = new Guid("000a57c3-3871-483c-8bd1-7e04d59fba81")
                        },
                        new
                        {
                            Id = new Guid("86ee6cf7-5ac3-4e1a-abba-d9e491e4c8a7"),
                            Name = "TBS",
                            ParentGenreId = new Guid("000a57c3-3871-483c-8bd1-7e04d59fba81")
                        },
                        new
                        {
                            Id = new Guid("00b5aa22-fca4-458c-b2fe-0ca9c41d111a"),
                            Name = "RPG",
                            ParentGenreId = new Guid("000a57c3-3871-483c-8bd1-7e04d59fba81")
                        },
                        new
                        {
                            Id = new Guid("9e2864a4-de70-4edc-855a-7b0cac706d8d"),
                            Name = "Rally",
                            ParentGenreId = new Guid("63499d64-2baf-4b14-a56b-f5065bab8173")
                        },
                        new
                        {
                            Id = new Guid("bba0aa30-9568-4320-b4f5-bdec42cd37ba"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("63499d64-2baf-4b14-a56b-f5065bab8173")
                        },
                        new
                        {
                            Id = new Guid("485fd6ed-83b7-4e68-a764-bfe3b11b09de"),
                            Name = "Formula",
                            ParentGenreId = new Guid("63499d64-2baf-4b14-a56b-f5065bab8173")
                        },
                        new
                        {
                            Id = new Guid("0703e73d-b472-455c-9f00-447656157658"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("63499d64-2baf-4b14-a56b-f5065bab8173")
                        },
                        new
                        {
                            Id = new Guid("59842c6a-03c1-474c-b6d7-0887d4f4a847"),
                            Name = "FPS",
                            ParentGenreId = new Guid("2dcac868-4939-4370-907a-1cfb78194a2c")
                        },
                        new
                        {
                            Id = new Guid("27ac08bb-d4ff-43cb-be3a-1ce734803b00"),
                            Name = "TPS",
                            ParentGenreId = new Guid("2dcac868-4939-4370-907a-1cfb78194a2c")
                        },
                        new
                        {
                            Id = new Guid("212673fe-09d4-4277-b0ad-2ee9f1e36408"),
                            Name = "Puzzle",
                            ParentGenreId = new Guid("876808bc-5a87-464f-8210-cf922a517505")
                        });
                });

            modelBuilder.Entity("Data.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platform");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc3da320-db42-4b46-9d92-5c59c6cea5d4"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("71115c91-409c-433c-8093-b0284d5620a8"),
                            Type = "Browser"
                        },
                        new
                        {
                            Id = new Guid("a41ab438-23d9-4523-9691-94db7efc95e6"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("ad559831-3ac5-43ed-b4aa-8cddc790bc98"),
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("Data.Entities.GameGenre", b =>
                {
                    b.HasOne("Data.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Data.Entities.GamePlatform", b =>
                {
                    b.HasOne("Data.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });
#pragma warning restore 612, 618
        }
    }
}
